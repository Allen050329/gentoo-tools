#!/bin/bash
set -o errexit

DEFCONFIG=false
INITRAMFS=true
DO_MENUCONFIG=false
USE_CUSTOM_KERNEL_SCRIPT=false
USE_CUSTOM_BOOTLOADER_SCRIPT=false
JOBS=$(nproc)

VALID_ARGS=$(getopt -o K,N,m,D,i,j: -- "$@")
eval set -- "$VALID_ARGS"
while [ : ]; do
  case "$1" in
    -K)
        if [ -f "/usr/share/updater/ckb.sh" ]; then
            USE_CUSTOM_KERNEL_SCRIPT=true
        else
            echo "Error: /usr/share/updater/ckb.sh not found!"
            exit 1
        fi
        shift
        ;;
    -N)
        if [ -f "/usr/share/updater/bootloader.sh" ]; then
            USE_CUSTOM_BOOTLOADER_SCRIPT=true
        else
            echo "Error: /usr/share/updater/bootloader.sh not found!"
            exit 1
        fi
        shift
        ;;
    -m)
        DO_MENUCONFIG=true
        shift
        ;;
    -D)
        DEFCONFIG=true
        shift
        ;;
    -i)
        INITRAMFS=false
        shift
        ;;
    -j)
        JOBS=$2
        shift 2
        ;;
    --)
        shift;
        break
        ;;
    -* | --*)
	    echo "Unexpected option: $1"
	    exit 1
	;;
    esac
done

is_int() {
    test "$@" -eq "$@" 2> /dev/null;
}

rectify_job_count() {
    while :; do
        echo "Invalid job count!!! Should be int"
        read -p "Input job count: " JOBS
        if is_int $JOBS; then
            if [[ $JOBS > 0 && $JOBS < $(nproc)+1 ]]; then
                break
            fi
        fi
    done
}

if is_int $JOBS; then
    if [[ $JOBS < 1 || $JOBS > $(nproc) ]]; then
        rectify_job_count
    fi
else
    rectify_job_count
fi

while :; do
    eselect kernel list | tee "/usr/share/updater/kernel_list.txt"
    check='^[+-]?[0-9]+([.][0-9]+)?$'
    read -p "Input kernel selection: " kernelchoice
    if [[ $kernelchoice =~ $check ]]; then
        if [[ $kernelchoice < $((10#`cat ./kernel_list.txt | wc -l`)) && $kernelchoice > 0 ]]; then
            break
        else
            echo "Invalid Choice!!!"
            continue
        fi
    else
        echo "Invalid Choice!!!"
        continue
    fi
done

eselect kernel set $kernelchoice

pushd /usr/share/updater
if [ "$USE_CUSTOM_KERNEL_SCRIPT" = true ]; then
    echo "Running custom kernel build script"
    ./ckb.sh
else
    pushd /usr/src/linux
    if [ "$DEFCONFIG" = true ]; then
        make defconfig
    else
        make olddefconfig
    fi

    if [ "$DO_MENUCONFIG" = true ]; then
        make menuconfig
    fi

    make -j$JOBS modules_prepare
    make -j$JOBS prepare
    make -j$JOBS
    make -j$JOBS modules_install
    make -j$JOBS install
    popd
    emerge @module-rebuild
fi

if [ "$INITRAMFS" = true ]; then
    dracut -Hf --fstab
fi

if [ "$USE_CUSTOM_BOOTLOADER_SCRIPT" = true ]; then
    ./bootloader.sh
else
    grub-mkconfig -o /boot/grub/grub.cfg
fi
popd
